{"version":3,"sources":["../../src/slider.jsx","App.js","index.js"],"names":["useDimension","contentRef","getDimension","useState","dimension","setDimension","handleResize","useEffect","window","useLayoutEffect","props","useRef","wrapperRef","position","setPosition","wrapperWidth","contentWidth","spacePaddingEnd","className","style","onClick","left","moveBack","React","ref","transform","right","moveForward","codeString","App","rightIcon","xmlns","height","viewBox","width","fill","d","Array","keys","map","val","indx","key","language","dark","wrapLines","ReactDOM","render","document","getElementById"],"mappings":"y2CA+DA,SAASA,EAAaC,GACpB,IAAMC,EAAe,WACnB,OAAOD,UAAqBA,UAArBA,YAAP,GAGF,EAAkCE,mBAAlC,GAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAe,WACnBD,EAAaH,MAWf,OARAK,qBAAU,WAER,OADAC,oCACO,kBAAMA,oCAAN,MAFTD,IAKAE,2BAAgB,WACdH,MADFG,IAGA,E,MA9EF,SAAgBC,GACd,IAAMT,EAAaU,mBACbC,EAAaD,mBAEnB,EAAgCR,mBAAhC,GAAOU,EAAP,KAAiBC,EAAjB,KAGMC,EAAef,EAArB,GAEMgB,EAAehB,EAArB,GACMiB,EAAkBF,EAAxB,IAgBA,OACE,yBAAKG,UAAWC,EAAcN,SAAUA,GACtC,yBAAKK,UAAWC,GACd,0BACEC,QAAS,YAXjB,YACE,IAAIC,EAAOR,EAAX,EACIQ,IAAJ,GACEP,KASMQ,QAGDZ,yBAAiCa,oBAPxC,QAUE,yBAAKL,UAAWC,EAAeK,IAAKZ,GAClC,yBACEM,UAAWC,EACXA,MAAO,CAAEM,UAAW,cAAF,SAClBD,IAAKvB,GAEJS,EAhBP,WAmBE,yBAAKQ,UAAWC,GACd,0BACEC,QAAS,YApCjB,YACE,IAAIM,GAASb,EAAb,EACIa,IAAJ,GACEZ,MAkCMa,QAGDjB,YAAkBA,EAAlBA,UAAoCa,oBA1B7C,U,iBCFIK,G,YAAU,4kCA2BDC,EAhDH,WACV,OAAO,yBAAKX,UAAU,aACpB,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CAAUY,UACR,yBAAKC,MAAM,6BAA6BC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOC,KAAK,WAAU,0BAAMC,EAAE,kBAAkBD,KAAK,SAAS,0BAAMC,EAAE,8VACrJ,YAAIC,MAAM,IAAIC,QAAQC,KAAI,SAACC,EAAKC,GAC/B,OACE,yBAAKvB,UAAU,UAAUwB,IAAKD,GAC5B,0BAAMvB,UAAU,iBAAhB,UAAwCuB,EAAO,SAMzD,yBAAKvB,UAAU,iBACb,kBAAC,IAAD,CAAmByB,SAAS,aAAaxB,MAAOyB,IAAMC,WAAW,GAC9DjB,MCjBTkB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c38f56ac.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect, useLayoutEffect } from 'react'\nimport { ReactComponent as Prev } from './assets/prev.svg'\nimport { ReactComponent as Next } from './assets/next.svg'\nimport style from './style.css'\nfunction Slider(props) {\n  const contentRef = useRef()\n  const wrapperRef = useRef()\n\n  const [position, setPosition] = useState(0)\n  // const [backBtn, setBackBtn] = useState(false)\n\n  const wrapperWidth = useDimension(wrapperRef)\n\n  const contentWidth = useDimension(contentRef)\n  const spacePaddingEnd = wrapperWidth / 1.2\n\n  function moveForward(step) {\n    let right = -position + step\n    if (right + spacePaddingEnd < contentWidth) {\n      setPosition(-right)\n    }\n  }\n\n  function moveBack(step) {\n    let left = position + step\n    if (left + spacePaddingEnd < wrapperWidth) {\n      setPosition(left)\n    }\n  }\n\n  return (\n    <div className={style.slider} position={position}>\n      <div className={style.prev}>\n        <span\n          onClick={() => {\n            moveBack(100)\n          }}\n        >\n          {props.leftIcon ? propsleftIcon : <Prev />}\n        </span>\n      </div>\n      <div className={style.wrapper} ref={wrapperRef}>\n        <div\n          className={style.content}\n          style={{ transform: `translateX(${position}px)` }}\n          ref={contentRef}\n        >\n          {props.children}\n        </div>\n      </div>\n      <div className={style.next}>\n        <span\n          onClick={() => {\n            moveForward(100)\n          }}\n        >\n          {props.rightIcon ? props.rightIcon : <Next />}\n        </span>\n      </div>\n    </div>\n  )\n}\n\nfunction useDimension(contentRef) {\n  const getDimension = () => {\n    return contentRef.current ? contentRef.current.offsetWidth : 0\n  }\n\n  const [dimension, setDimension] = useState(getDimension)\n\n  const handleResize = () => {\n    setDimension(getDimension())\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  useLayoutEffect(() => {\n    handleResize()\n  }, [])\n  return dimension\n}\n\nexport default Slider\n","import React from 'react'\nimport Scroller from 'custom-react-scroller'\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport dark from 'react-syntax-highlighter/dist/esm/styles/hljs/monokai';\nimport 'custom-react-scroller/dist/index.css'\nimport './example.style.css'\n\nconst App = () => {\n  return <div className=\"container\">\n    <div className=\"scrollerContainer\">\n      <Scroller rightIcon={\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\" /></svg>}>\n        {[...Array(20).keys()].map((val, indx) => {\n          return (\n            <div className=\"buttons\" key={indx}>\n              <span className=\"buttonContent\">button {indx + 1}</span>\n            </div>\n          )\n        })}\n      </Scroller>\n    </div>\n    <div className=\"codeContainer\">\n      <SyntaxHighlighter language=\"javascript\" style={dark} wrapLines={true}>\n        {codeString}\n      </SyntaxHighlighter>\n    </div>\n  </div>\n}\nconst codeString = `\nimport React from 'react'\nimport Scroller from 'custom-react-scroller'\nimport 'custom-react-scroller/dist/index.css'\nimport './example.style.css'\n\nconst App = () => {\n  return <div className=\"container\">\n    <div className=\"scrollerContainer\">\n    <Scroller rightIcon={\n      <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\" /></svg>}>\n      {[...Array(20).keys()].map((val, indx) => {\n        return (\n          <div className=\"buttons\" key={indx}>\n            <span className=\"buttonContent\">button {indx + 1}</span>\n          </div>\n        )\n      })}\n    </Scroller>\n    </div>\n  </div>\n}\n\nexport default App\n\n`;\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}